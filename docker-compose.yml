x-common:
  &common
  image: apache/airflow:2.7.0
  user: "${AIRFLOW_UID}:0"
  env_file: 
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  postgres:
    image: postgres:13
    container_name: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env
    environment:
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  
  mongodb: 
    image: mongo:5.0 
    container_name: mongodb
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 5s
      retries: 5
    volumes:
      - local_mongo_data:/data/db 
    ports:
      - "27017:27017" 

  scheduler:
    <<: [*common, *depends-on]
    container_name: airflow-scheduler
    build: 
      context: .
      dockerfile: Dockerfile
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: [*common, *depends-on]
    container_name: airflow-webserver
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version

volumes:
  local_postgres_data:
  local_mongo_data:
